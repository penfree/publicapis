// Copyright 2016 北京大数医达科技有限公司
//

// {DOC: true}
syntax = "proto3";

// {LANG: en}
// This package implements the disease prediction functions, including:
// * Disease prediction
// * Drug recommendation
// * Department suggestion
// * etc..
// {LANG: cn}
// 本模块实现了智能的诊断、预测等功能，包括但不限于：
// * 疾病预测
// * 用药推荐
// * 建议科室
// * 等等
package iyoudoctor.doctorbot.v1.analyze;

import "google/protobuf/timestamp.proto";
import "iyoudoctor/doctorbot/v1/knowledge/data.proto";

option go_package = "analyze";

option java_multiple_files = true;
option java_outer_classname = "DataProto";
option java_package = "com.iyoudoctor.doctorbot.v1.analyze";

// {LANG: en} Gender
// {LANG: cn} 性别
enum Gender {
    // {LANG: en} Unknown
    // {LANG: cn} 未知
    GenderUnknown = 0;
    // {LANG: en} Male
    // {LANG: cn} 男
    GenderMale = 1;
    // {LANG: en} Female
    // {LANG: cn} 女
    GenderFemale = 2;
}

// {LANG: en} The user basic info
// {LANG: cn} 用户基本信息
message UserBasicInfo {
    // {LANG: en} The gender
    // {LANG: cn} 性别
    Gender gender = 1;
    // {LANG: en} The age
    // {LANG: cn} 年龄
    UserAge age = 2;
    // {LANG: en} Birthday, use RFC 3339 format to serialize to string (e.g. 1972-01-01T10:00:20.021Z)
    // {LANG: cn} 出生日期，采用 RFC 3339 格式进行字符串序列化（举例：1972-01-01T10:00:20.021Z）
    google.protobuf.Timestamp birthday = 3;
    // The height, in cm
    float height = 4;
    // The weight, in kg
    float weight = 5;
}

message UserAge {
    // The year
    int32 year = 1;
    // The month
    int32 month = 2;
}

// {LANG: en} The user symptom
// {LANG: cn} 用户症状
message UserSymptom {
    // {LANG: en} The name
    // {LANG: cn} 名称
    string name = 1;
    // {LANG: en} The state
    // {LANG: cn} 状态
    SymptomState state = 2;
}

// {LANG: en} The state of symptom
// {LANG: cn} 症状状态
enum SymptomState {
    // {LANG: en} Unknown
    // {LANG: cn} 不确定
    SymptomStateUnknown = 0;
    // {LANG: en} Positive
    // {LANG: cn} 存在该症状
    SymptomStatePositive = 1;
    // {LANG: en} Negative
    // {LANG: cn} 不存在该症状
    SymptomStateNegative = 2;
}

// {LANG: en} The user lab item
// {LANG: cn} 用户化验项目
message UserLabItem {
    // {LANG: en} The name
    // {LANG: cn} 名称
    string name = 1;
    // {LANG: en} The specimen
    // {LANG: cn} 样本
    string specimen = 2;
    // {LANG: en} The numeric value
    // {LANG: cn} 数值结果（当化验项目的值类型是数值型时）
    float numericValue = 3;
    // {LANG: en} The qualitative value
    // {LANG: cn} 定性结果（当化验项目的值类型是定性类型时）
    string qualitativeValue = 4;
    // {LANG: en} The unit name. A necessary field when this is a numeric value
    // {LANG: cn} 化验结果单位，当化验项目是数值型时，这个字段是必要的
    string unit = 5;
}

// {LANG: en} The user exam item
// {LANG: cn} 用户检查观察结果
message UserExamObservation {
    // {LANG: en} The name
    // {LANG: cn} 名称
    string name = 1;
    // {LANG: en} The state
    // {LANG: cn} 状态
    ExamObservationState state = 2;
    // The exam name (optional)
    string exam = 3;
}

enum ExamObservationState {
    // {LANG: en} Unknown
    // {LANG: cn} 不确定
    ExamObservationStateUnknown = 0;
    // {LANG: en} Positive
    // {LANG: cn} 存在该症状
    ExamObservationStatePositive = 1;
    // {LANG: en} Negative
    // {LANG: cn} 不存在该症状
    ExamObservationStateNegative = 2;
}

// {LANG: en} The user disease
// You should either provide icd10 or name in this request, if both are provided, icd10 will be used
// {LANG: cn} 用户的疾病
// 需要指定icd10或者name字段，如果两者都被指定会使用icd10字段
message UserDisease {
    // {LANG: en} The disease value
    // {LANG: cn} 疾病的信息
    oneof value {
        // {LANG: en} The icd10 of the disease
        // {LANG: cn} 疾病的ICD10编码
        string icd10 = 1;
        // {LANG: en} The name of the disease
        // {LANG: cn} 疾病的名称
        string name = 2;
    }
}

enum MedicalActionType {
    // No action
    MedicalActionTypeNone = 0;
    // Ask symptom
    MedicalActionTypeAskSymptom = 1;
    // Ask past disease
    MedicalActionTypeAskPastDisease = 2;
    // Ask vital
    MedicalActionTypeAskVital = 3;
    // Recommend department
    MedicalActionTypeRecommendDepartment = 4;
    // Ask lab
    MedicalActionTypeAskLab = 5;
    // Ask exam
    MedicalActionTypeAskExam = 6;
    // Diagnose
    MedicalActionTypeDiagnose = 7;
    // Recommend drug
    MedicalActionTypeRecommendDrug = 8;
    // Recommend operation
    MedicalActionTypeRecommendOperation = 9;
}

// The best action
message MedicalAction {
    // The action type
    MedicalActionType type = 1;
    // Ask symptom
    MedicalActionAskSymptom askSymptom = 2;
    // Ask past disease
    MedicalActionAskPastDisease askPastDisease = 3;
    // Ask vital
    MedicalActionAskVitalSign askVitalSign = 4;
    // Recommend department
    MedicalActionRecommendDepartment recommendDepartment = 5;
    // Ask lab
    MedicalActionAskLab askLab = 6;
    // Ask exam
    MedicalActionAskExam askExam = 7;
    // Diagnose
    MedicalActionDiagnose diagnose = 8;
    // Recommend drug
    MedicalActionRecommendDrug recommendDrug = 9;
    // Recommend operation
    MedicalActionRecommendOperation recommendOperation = 10;
}

// Ask symptom
message MedicalActionAskSymptom {
    // The name
    iyoudoctor.doctorbot.v1.knowledge.Symptom symptom = 1;
}

// Ask past disease
message MedicalActionAskPastDisease {
    // The disease
    iyoudoctor.doctorbot.v1.knowledge.Disease disease = 1;
}

// Ask vital sign
message MedicalActionAskVitalSign {
    // The name
    string name = 1;
}

// Recommend department
message MedicalActionRecommendDepartment {
    // The department
    iyoudoctor.doctorbot.v1.knowledge.Department department = 1;
}

// Ask lab
message MedicalActionAskLab {
    // The lab item
    iyoudoctor.doctorbot.v1.knowledge.LabItem labItem = 1;
}

// Ask exam
message MedicalActionAskExam {
    // The exam item
    iyoudoctor.doctorbot.v1.knowledge.ExamItem examItem = 1;
}

// Diagnose
message MedicalActionDiagnose {
    // The disease
    iyoudoctor.doctorbot.v1.knowledge.Disease disease = 1;
}

// Recommend drug
message MedicalActionRecommendDrug {
    // The recommend drugs
    repeated RecommendDrug drugs = 1;
}

message RecommendDrug {
    // The drug
    iyoudoctor.doctorbot.v1.knowledge.Drug drug = 1;
}

// Recommend operation
message MedicalActionRecommendOperation {
    iyoudoctor.doctorbot.v1.knowledge.Operation operation = 1;
}
